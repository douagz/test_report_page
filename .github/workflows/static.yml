# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  test-baidu-report:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
    - name: Configure Git
      env: 
        GIT_USERNAME: ${{secrets.NAME}}
        GIT_EMAIL: ${{secrets.EMAIL}}
      run: | 
        git config --global user.name ${GIT_USERNAME}
        git config --global user.email ${GIT_EMAIL}
        
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        playwright install
    - name: Install Allure
      run: |
        sudo apt-get install wget
        wget https://github.com/allure-framework/allure2/releases/download/2.25.0/allure-2.25.0.tgz
        tar -zxvf allure-2.25.0.tgz
        sudo cp -r ./allure-2.25.0 /usr/local/
        export PATH=$PATH:/usr/local/allure-2.25.0/bin
        source /etc/profile
        allure --version
        
    - name: Test with pytest
      env:
        AllureResult: '/home/runner/work/test_report_page/test_report_page/AllureResult'
        AllureReport: '/home/runner/work/test_report_page/test_report_page/AllureReport'
      run: |
        pytest -vs --alluredir=$AllureResult --clean-alluredir AllureTest
        ls $AllureResult
        export PATH=$PATH:/usr/local/allure-2.25.0/bin
        allure generate $AllureResult -o $AllureReport --clean
        ls $AllureReport
        
    - name: Setup Pages
      uses: actions/configure-pages@v3
    #- name: Build
    #  uses: actions/jekyll-build-pages@v1
    #  with:
    #    source: "./AllureReport"
    #    destination: "./AllureReport"
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: "./AllureReport"        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 
    - name: add commit push
      run: | 
        git add --all
        git commit --message 'Update the report folder'
        git push origin main
        
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: test-baidu-report
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
